{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corss\\\\React\\\\React - IKFRAM - eindapp\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Api\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backgrounds = {\n  \"01d\": classes.sunnyday,\n  \"02d\": classes.sunnyday,\n  \"03d\": classes.cloudyday,\n  \"04d\": classes.cloudyday,\n  \"09d\": classes.rainyday,\n  \"10d\": classes.rainyday,\n  \"11d\": classes.stormyday,\n  \"13d\": classes.snowyday,\n  \"50d\": classes.foggyday,\n  \"01n\": classes.cloudlessnight,\n  \"02n\": classes.cloudynight,\n  \"03n\": classes.cloudynight,\n  \"04n\": classes.cloudynight,\n  \"09n\": classes.rainynight,\n  \"10n\": classes.rainynight,\n  \"11n\": classes.stormynight,\n  \"13n\": classes.snowynight,\n  \"50n\": classes.foggynight\n};\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [status, setStatus] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [checkLocation, setCheckLocation] = useState(false);\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStats(\"Geolocation is not supported by your browser\");\n    } else {\n      setStats(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(position => {\n        setStats(null);\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n        console.log(\"Finished Fetching your Location\");\n        setCheckLocation(true);\n      }, () => {\n        setStats(\"unnable to retrieve your location\");\n      });\n    }\n  };\n  const firstChange = () => {\n    if (latitude === null || longitude === null) {\n      return;\n    }\n    setStatus(true);\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: \"Your Location\",\n        ...weatherResponse\n      });\n      setForecast({\n        city: \"Your Location\",\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  const searchChangeHandler = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    setStatus(true);\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  let background = classes.defaultBackground;\n  if (currentWeather !== null) {\n    let weatherIcon = currentWeather.weather[0].icon;\n    background = backgrounds[weatherIcon];\n  }\n  useEffect(() => {\n    if (currentWeather != null && forecast != null) {\n      setStatus(false);\n    }\n  }, [currentWeather, forecast]);\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n    firstChange();\n  }, [checkLocation]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: searchChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), !status && currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        props: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 47\n      }, this), !status && forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        props: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"45vv0oyyHXv7PJxTRt1jPwr7aio=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","classes","WEATHER_API_URL","WEATHER_API_KEY","React","useState","useEffect","useContext","Forecast","LoadingSpinner","backgrounds","sunnyday","cloudyday","rainyday","stormyday","snowyday","foggyday","cloudlessnight","cloudynight","rainynight","stormynight","snowynight","foggynight","App","currentWeather","setCurrentWeather","forecast","setForecast","status","setStatus","latitude","setLatitude","longitude","setLongitude","stats","setStats","checkLocation","setCheckLocation","getLocation","navigator","geolocation","getCurrentPosition","position","coords","console","log","firstChange","currentWeatherFetch","fetch","forcastFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","catch","err","searchChangeHandler","searchData","lat","lon","value","split","label","background","defaultBackground","weatherIcon","weather","icon","container"],"sources":["C:/Users/corss/React/React - IKFRAM - eindapp/01-starting-setup/src/App.js"],"sourcesContent":["import Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport {WEATHER_API_URL, WEATHER_API_KEY} from \"./Api\";\nimport React, {useState, useEffect, useContext} from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst backgrounds = {\n    \"01d\": classes.sunnyday,\n    \"02d\": classes.sunnyday,\n    \"03d\": classes.cloudyday,\n    \"04d\": classes.cloudyday,\n    \"09d\": classes.rainyday,\n    \"10d\": classes.rainyday,\n    \"11d\": classes.stormyday,\n    \"13d\": classes.snowyday,\n    \"50d\": classes.foggyday,\n    \"01n\": classes.cloudlessnight,\n    \"02n\": classes.cloudynight,\n    \"03n\": classes.cloudynight,\n    \"04n\": classes.cloudynight,\n    \"09n\": classes.rainynight,\n    \"10n\": classes.rainynight,\n    \"11n\": classes.stormynight,\n    \"13n\": classes.snowynight,\n    \"50n\": classes.foggynight,\n}\nfunction App() {\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [forecast, setForecast] = useState(null);\n    const [status, setStatus] = useState(false);\n    const [latitude, setLatitude] = useState(null);\n    const [longitude, setLongitude] = useState(null);\n    const [stats, setStats] = useState(null);\n    const [checkLocation, setCheckLocation] = useState(false);\n    const getLocation = () => {\n        if (!navigator.geolocation) {\n            setStats(\"Geolocation is not supported by your browser\");\n        } else {\n            setStats(\"Locating...\");\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    setStats(null);\n                    setLatitude(position.coords.latitude);\n                    setLongitude(position.coords.longitude);\n                    console.log(\"Finished Fetching your Location\");\n                    setCheckLocation(true);\n                },\n                () => {\n                    setStats(\"unnable to retrieve your location\");\n                }\n            );\n        }\n    };\n\n    const firstChange = () => {\n        if (latitude === null || longitude === null) {\n            return;\n        }\n\n        setStatus(true);\n        const currentWeatherFetch = fetch(\n            `${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n        );\n        const forcastFetch = fetch(\n            `${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n        );\n\n        Promise.all([currentWeatherFetch, forcastFetch])\n            .then(async (response) => {\n                const weatherResponse = await response[0].json();\n                const forcastResponse = await response[1].json();\n\n                setCurrentWeather({city: \"Your Location\", ...weatherResponse});\n                setForecast({city: \"Your Location\", ...forcastResponse});\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const searchChangeHandler = (searchData) => {\n        const [lat, lon] = searchData.value.split(\" \");\n\n\n        setStatus(true);\n        const currentWeatherFetch = fetch(\n            `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n        );\n        const forcastFetch = fetch(\n            `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n        );\n\n        Promise.all([currentWeatherFetch, forcastFetch])\n            .then(async (response) => {\n                const weatherResponse = await response[0].json();\n                const forcastResponse = await response[1].json();\n\n                setCurrentWeather({city: searchData.label, ...weatherResponse});\n                setForecast({city: searchData.label, ...forcastResponse});\n            })\n            .catch((err) => console.log(err));\n\n    };\n    console.log(currentWeather)\n\n    let background = classes.defaultBackground;\n\n\n    if (currentWeather !== null) {\n        let weatherIcon = currentWeather.weather[0].icon;\n        background = backgrounds[weatherIcon];\n    }\n\n    useEffect(() => {\n        if (currentWeather != null && forecast != null) {\n            setStatus(false);\n        }\n    }, [currentWeather, forecast]);\n    useEffect(() => {\n        getLocation();\n    }, []);\n\n\n    useEffect(() => {\n        firstChange();\n    }, [checkLocation]);\n\n    return (\n        <React.Fragment>\n            <div>\n                <img className={background}></img>\n            </div>\n            <div className={classes.container}>\n                <div className=\"overlay\"/>\n                <Search onSearchChange={searchChangeHandler}/>\n                {status && (\n                    <div className=\"centered\">\n                        <LoadingSpinner/>\n                    </div>\n                )}\n                {!status && currentWeather && <CurrentWeather props={currentWeather}/>}\n                {!status && forecast && <Forecast props={forecast}/>}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}