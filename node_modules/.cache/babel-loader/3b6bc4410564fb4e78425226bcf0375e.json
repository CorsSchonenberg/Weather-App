{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corss\\\\OneDrive\\\\Bureaublad\\\\School\\\\React\\\\React - IKFRAM - eindapp\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Api\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [status, setStatus] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [hasBeenUsed, setHasBeenUsed] = useState(false);\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStats(\"Geolocation is not supported by your browser\");\n    } else {\n      setStats(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(position => {\n        setStats(null);\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      }, () => {\n        setStats(\"unnable to retrieve your location\");\n      });\n    }\n  };\n  useEffect(() => {\n    getLocation();\n  }, []);\n  setTimeout(() => {\n    console.log('Hello, World!');\n  }, 3000);\n  useEffect(() => {\n    firstChange();\n  }, []);\n  console.log(latitude + \" outside function\");\n  const firstChange = () => {\n    console.log(\"HIII\");\n    console.log(latitude + \"hi\");\n    if (latitude === null || longitude === null) {\n      return;\n    }\n    console.log(\"After method\");\n    setStatus(true);\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: \"Your Place\",\n        ...weatherResponse\n      });\n      setForecast({\n        city: \"Your Place\",\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  const searchChangeHandler = searchData => {\n    console.log(\"HIII\");\n    const [lat, lon] = searchData.value.split(\" \");\n    setLatitude(lat);\n    setLongitude(lon);\n    console.log(latitude + \"hi\");\n    setStatus(true);\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  let background = classes.defaultBackground;\n  if (currentWeather !== null) {\n    let weatherIcon = currentWeather.weather[0].icon;\n    if (weatherIcon === \"01d\" || weatherIcon === \"02d\") {\n      background = classes.sunnyday;\n    } else if (weatherIcon === \"03d\" || weatherIcon === \"04d\") {\n      background = classes.cloudyday;\n    } else if (weatherIcon === \"09d\" || weatherIcon === \"10d\") {\n      background = classes.rainyday;\n    } else if (weatherIcon === \"11d\") {\n      background = classes.stormyday;\n    } else if (weatherIcon === \"13d\") {\n      background = classes.snowyday;\n    } else if (weatherIcon === \"50d\") {\n      background = classes.foggyday;\n    } else if (weatherIcon === \"01n\") {\n      background = classes.cloudlessnight;\n    } else if (weatherIcon === \"02n\" || weatherIcon === \"03n\" || weatherIcon === \"04n\") {\n      background = classes.cloudynight;\n    } else if (weatherIcon === \"09n\" || weatherIcon === \"10n\") {\n      background = classes.rainynight;\n    } else if (weatherIcon === \"11n\") {\n      background = classes.stormynight;\n    } else if (weatherIcon === \"13n\") {\n      background = classes.snowynight;\n    } else if (weatherIcon === \"50n\") {\n      background = classes.foggynight;\n    }\n  }\n  useEffect(() => {\n    if (currentWeather != null && forecast != null) {\n      setStatus(false);\n    }\n  }, [currentWeather, forecast]);\n  console.log(currentWeather);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: searchChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), !hasBeenUsed && !status && currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        props: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 55\n      }, this), !hasBeenUsed && !status && forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        props: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 48\n      }, this), hasBeenUsed && status && currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        props: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 53\n      }, this), hasBeenUsed && status && forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        props: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9xGDOaYEqc0pg0G1Ll/dwMLqvcA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","classes","WEATHER_API_URL","WEATHER_API_KEY","React","useState","useEffect","useContext","Forecast","LoadingSpinner","App","currentWeather","setCurrentWeather","forecast","setForecast","status","setStatus","latitude","setLatitude","longitude","setLongitude","stats","setStats","hasBeenUsed","setHasBeenUsed","getLocation","navigator","geolocation","getCurrentPosition","position","coords","setTimeout","console","log","firstChange","currentWeatherFetch","fetch","forcastFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","catch","err","searchChangeHandler","searchData","lat","lon","value","split","label","background","defaultBackground","weatherIcon","weather","icon","sunnyday","cloudyday","rainyday","stormyday","snowyday","foggyday","cloudlessnight","cloudynight","rainynight","stormynight","snowynight","foggynight","container"],"sources":["C:/Users/corss/OneDrive/Bureaublad/School/React/React - IKFRAM - eindapp/01-starting-setup/src/App.js"],"sourcesContent":["import Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Api\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [status, setStatus] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [hasBeenUsed, setHasBeenUsed] = useState(false);\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStats(\"Geolocation is not supported by your browser\");\n    } else {\n      setStats(\"Locating...\");\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setStats(null);\n          setLatitude(position.coords.latitude);\n          setLongitude(position.coords.longitude);\n        },\n        () => {\n          setStats(\"unnable to retrieve your location\");\n        }\n      );\n    }\n    \n  };\n  useEffect(() => {\n     getLocation()\n\n  }, []);\n  setTimeout(() => {\n    console.log('Hello, World!')\n  }, 3000);\n  useEffect(() => {\n    firstChange()\n\n }, []);\n\n  console.log(latitude + \" outside function\")\n\n\n\n  const firstChange = () => {\n    console.log(\"HIII\");\n    console.log(latitude + \"hi\");\n    if(latitude === null || longitude === null){\n      return;\n    }\n    console.log(\"After method\")\n\n    setStatus(true);\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forcastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forcastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forcastResponse = await response[1].json();\n\n        setCurrentWeather({ city: \"Your Place\", ...weatherResponse });\n        setForecast({ city: \"Your Place\", ...forcastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n\n\n  const searchChangeHandler = (searchData) => {\n    console.log(\"HIII\");\n    const [lat, lon] = searchData.value.split(\" \");\n    setLatitude(lat);\n    setLongitude(lon);\n    console.log(latitude + \"hi\");\n\n    setStatus(true);\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forcastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forcastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forcastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forcastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n\n\n  let background = classes.defaultBackground;\n  if (currentWeather !== null) {\n    let weatherIcon = currentWeather.weather[0].icon;\n    if (weatherIcon === \"01d\" || weatherIcon === \"02d\") {\n      background = classes.sunnyday;\n    } else if (weatherIcon === \"03d\" || weatherIcon === \"04d\") {\n      background = classes.cloudyday;\n    } else if (weatherIcon === \"09d\" || weatherIcon === \"10d\") {\n      background = classes.rainyday;\n    } else if (weatherIcon === \"11d\") {\n      background = classes.stormyday;\n    } else if (weatherIcon === \"13d\") {\n      background = classes.snowyday;\n    } else if (weatherIcon === \"50d\") {\n      background = classes.foggyday;\n    } else if (weatherIcon === \"01n\") {\n      background = classes.cloudlessnight;\n    } else if (\n      weatherIcon === \"02n\" ||\n      weatherIcon === \"03n\" ||\n      weatherIcon === \"04n\"\n    ) {\n      background = classes.cloudynight;\n    } else if (weatherIcon === \"09n\" || weatherIcon === \"10n\") {\n      background = classes.rainynight;\n    } else if (weatherIcon === \"11n\") {\n      background = classes.stormynight;\n    } else if (weatherIcon === \"13n\") {\n      background = classes.snowynight;\n    } else if (weatherIcon === \"50n\") {\n      background = classes.foggynight;\n    }\n  }\n  useEffect(() => {\n    if (currentWeather != null && forecast != null) {\n      setStatus(false);\n    }\n  }, [currentWeather, forecast]);\n  console.log(currentWeather)\n\n  return (\n    <React.Fragment>\n      <div>\n        <img className={background}></img>\n      </div>\n      <div className={classes.container}>\n        <div className=\"overlay\" />\n        <Search onSearchChange={searchChangeHandler}/>\n        {status && (\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        )}\n        {!hasBeenUsed && !status && currentWeather && <CurrentWeather props={currentWeather} />}\n        {!hasBeenUsed &&!status && forecast && <Forecast props={forecast} />}\n        {hasBeenUsed && status && currentWeather && <CurrentWeather props={currentWeather} />}\n        {hasBeenUsed && status && forecast && <Forecast props={forecast} />}\n\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}