{"ast":null,"code":"import { useRef } from \"react\";\nconst CurrentLocation = () => {\n  let la;\n  let lon;\n  const options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  };\n  function success(pos) {\n    const crd = pos.coords;\n\n    //  console.log('Your current position is:');\n    //  console.log(`Latitude : ${crd.latitude}`);\n    //  console.log(`Longitude: ${crd.longitude}`);\n    //  console.log(`More or less ${crd.accuracy} meters.`);\n    la = crd.latitude;\n    lon = crd.longitude;\n    console.log(la + \"lati\");\n  }\n  console.log(la + \"lati\");\n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n  const watchId = navigator.geolocation.getCurrentPosition(success, error, options);\n  console.log(navigator.geolocation.clearWatch(watchId));\n  return navigator.geolocation.clearWatch(watchId);\n};\n_c = CurrentLocation;\nexport default CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["useRef","CurrentLocation","la","lon","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","console","log","error","err","warn","code","message","watchId","navigator","geolocation","getCurrentPosition","clearWatch"],"sources":["C:/Users/corss/OneDrive/Bureaublad/School/React/React - IKFRAM - eindapp/01-starting-setup/src/components/location/CurrentLocation.js"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\nconst CurrentLocation = () => {\r\n\r\n    let la;\r\n    let lon;\r\n\r\nconst options = {\r\n    enableHighAccuracy: true,\r\n    timeout: 5000,\r\n    maximumAge: 0\r\n  };\r\n  \r\n  function success(pos) {\r\n    const crd = pos.coords;\r\n  \r\n    //  console.log('Your current position is:');\r\n    //  console.log(`Latitude : ${crd.latitude}`);\r\n    //  console.log(`Longitude: ${crd.longitude}`);\r\n    //  console.log(`More or less ${crd.accuracy} meters.`);\r\n    la = crd.latitude;\r\n    lon = crd.longitude;\r\n    console.log(la +\"lati\");\r\n  }\r\n  console.log(la +\"lati\");\r\n  \r\n  function error(err) {\r\n    console.warn(`ERROR(${err.code}): ${err.message}`);\r\n  }\r\n  const watchId = navigator.geolocation.getCurrentPosition(success, error, options)\r\n    console.log(navigator.geolocation.clearWatch(watchId));\r\n    return navigator.geolocation.clearWatch(watchId);\r\n  }\r\n  export default CurrentLocation;\r\n  \r\n\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,MAAMC,eAAe,GAAG,MAAM;EAE1B,IAAIC,EAAE;EACN,IAAIC,GAAG;EAEX,MAAMC,OAAO,GAAG;IACZC,kBAAkB,EAAE,IAAI;IACxBC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;EACd,CAAC;EAED,SAASC,OAAO,CAACC,GAAG,EAAE;IACpB,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM;;IAEtB;IACA;IACA;IACA;IACAT,EAAE,GAAGQ,GAAG,CAACE,QAAQ;IACjBT,GAAG,GAAGO,GAAG,CAACG,SAAS;IACnBC,OAAO,CAACC,GAAG,CAACb,EAAE,GAAE,MAAM,CAAC;EACzB;EACAY,OAAO,CAACC,GAAG,CAACb,EAAE,GAAE,MAAM,CAAC;EAEvB,SAASc,KAAK,CAACC,GAAG,EAAE;IAClBH,OAAO,CAACI,IAAI,CAAE,SAAQD,GAAG,CAACE,IAAK,MAAKF,GAAG,CAACG,OAAQ,EAAC,CAAC;EACpD;EACA,MAAMC,OAAO,GAAGC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAChB,OAAO,EAAEQ,KAAK,EAAEZ,OAAO,CAAC;EAC/EU,OAAO,CAACC,GAAG,CAACO,SAAS,CAACC,WAAW,CAACE,UAAU,CAACJ,OAAO,CAAC,CAAC;EACtD,OAAOC,SAAS,CAACC,WAAW,CAACE,UAAU,CAACJ,OAAO,CAAC;AAClD,CAAC;AAAA,KA9BGpB,eAAe;AA+BnB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}