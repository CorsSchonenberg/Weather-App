{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corss\\\\OneDrive\\\\Bureaublad\\\\School\\\\React\\\\React - IKFRAM - eindapp\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Api\";\nimport React, { useState } from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport background from \"./img/overlay.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useEffect(() => {\n  //   if(someStateYouExpectToChangeToTriggerTheBackgroundChange === 'what you expect it to be to trigger the bg change') {\n  //     document.body.style.backgroundImage = 'url(path/img.png)' // double check my quotes\n  //   }\n  // }, [someStateYouExpectToChangeToTriggerTheBackgroundChange])\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const searchChangeHandler = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: searchChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        props: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        props: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","classes","WEATHER_API_URL","WEATHER_API_KEY","React","useState","Forecast","background","App","currentWeather","setCurrentWeather","forecast","setForecast","searchChangeHandler","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forcastFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","label","catch","err","console","log","container"],"sources":["C:/Users/corss/OneDrive/Bureaublad/School/React/React - IKFRAM - eindapp/01-starting-setup/src/App.js"],"sourcesContent":["import Search from \"./components/search/Search\";\nimport CurrentWeather from \"./components/current-weather/Current-weather\";\nimport classes from \"./App.module.css\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Api\";\nimport React, { useState } from \"react\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport background from \"./img/overlay.jpg\";\n\nfunction App() {\n  // useEffect(() => {\n  //   if(someStateYouExpectToChangeToTriggerTheBackgroundChange === 'what you expect it to be to trigger the bg change') {\n  //     document.body.style.backgroundImage = 'url(path/img.png)' // double check my quotes\n  //   }\n  // }, [someStateYouExpectToChangeToTriggerTheBackgroundChange])\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const searchChangeHandler = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forcastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forcastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forcastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forcastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <React.Fragment>\n\n    <div className={classes.container}>\n    <div className=\"brug\"/>\n      {/* <div className=\"overlay\" /> */}\n      <Search onSearchChange={searchChangeHandler} />\n      {currentWeather && <CurrentWeather props={currentWeather} />}\n      {forecast && <Forecast props={forecast} />}\n      </div>\n\n      </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,8CAA8C;AACzE,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,UAAU,MAAM,mBAAmB;AAAC;AAE3C,SAASC,GAAG,GAAG;EAAA;EACb;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMC,mBAAmB,GAAGC,KAAK,CAC9B,GAAElB,eAAgB,gBAAea,GAAI,QAAOC,GAAI,UAASb,eAAgB,eAAc,CACzF;IACD,MAAMkB,YAAY,GAAGD,KAAK,CACvB,GAAElB,eAAgB,iBAAgBa,GAAI,QAAOC,GAAI,UAASb,eAAgB,eAAc,CAC1F;IAEDmB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,YAAY,CAAC,CAAC,CAC7CG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAChD,MAAMC,eAAe,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAEhDjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAgB,CAAC,CAAC;IAC7D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBAEf;MAAK,SAAS,EAAE/B,OAAO,CAACkC,SAAU;MAAA,wBAClC;QAAK,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAErB,QAAC,MAAM;QAAC,cAAc,EAAEtB;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,EAC9CJ,cAAc,iBAAI,QAAC,cAAc;QAAC,KAAK,EAAEA;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,EAC3DE,QAAQ,iBAAI,QAAC,QAAQ;QAAC,KAAK,EAAEA;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACpC;IAAA;IAAA;IAAA;EAAA,QAEW;AAEvB;AAAC,GA3CQH,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}